import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java-library'
    id 'eclipse'
}

apply plugin: 'java-library'
apply plugin: 'signing'
apply plugin: 'com.vanniktech.maven.publish'    

description = 'Nifty Modbus: Shell'
archivesBaseName = 'nifty-modbus-shell'

dependencies {
	implementation project(':nifty-modbus-api')
	implementation project(':nifty-modbus-core');
	implementation project(':nifty-modbus-rtu');
	implementation project(':nifty-modbus-rtu-jsc');
	implementation project(':nifty-modbus-rtu-pjc');
	implementation project(':nifty-modbus-tcp');
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"
	implementation "io.netty:netty-codec:${nettyVersion}"
	implementation "com.fazecast:jSerialComm:${jscVersion}";
	implementation "net.solarnetwork.external:net.solarnetwork.external.pjc:${pjcVersion}"
	implementation "ch.qos.logback:logback-classic:${logbackClassicVersion}"
}

jar.manifest {
    attributes('Implementation-Version': version)
}

eclipse {
	jdt {
		javaRuntimeName 'JavaSE-1.8'
	}
}

// to run ModbusShell, run like
// ../gradlew -q --console=plain runWithJavaExec --args='--device /dev/ttyUSB0 --baud 4800 --bits 8N1'

task runWithJavaExec(type: JavaExec) {
	group = "Execution"
	description = "Run the ModbusShell"
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'net.solarnetwork.io.modbus.shell.ModbusShell'
	standardInput = System.in
}

mavenPublishing {
	coordinates(group, archivesBaseName, version)
	publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
	signAllPublications()

	pom {
		name = project.description
		description = 'Nifty Modbus interactive command-line shell application.'
		url = 'https://github.com/SolarNetwork/nifty-modbus/shell'
		inceptionYear = '2024'
		licenses {
			license {
				name = 'GNU General Public License, Version 2.0'
				url = 'https://opensource.org/licenses/GPL-2.0'
			}
		}
		developers {
			developer {
				id = 'msqr'
				name = 'Matt Magoffin'
				email = 'matt@solarnetwork.net'
				organization = 'SolarNetwork Foundation'
				organizationUrl = 'https://solarnetwork.org.nz'
			}
		}
		scm {
			connection = 'scm:git:https://github.com/SolarNetwork/nifty-modbus.git'
			developerConnection = 'scm:git:git@github.com:SolarNetwork/nifty-modbus.git'
			url = 'https://github.com/SolarNetwork/nifty-modbus'
		}
	}
}

signing {
	useGpgCmd()
}
