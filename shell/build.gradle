plugins {
    id 'java-library'
    id 'eclipse'
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

description = 'Nifty Modbus: Shell'
archivesBaseName = 'nifty-modbus-shell'

dependencies {
	implementation project(':nifty-modbus-core');
	implementation project(':nifty-modbus-rtu');
	implementation project(':nifty-modbus-rtu-jsc');
	implementation project(':nifty-modbus-tcp');
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"
	implementation "io.netty:netty-codec:${nettyVersion}"
	implementation 'com.fazecast:jSerialComm:2.9.2';
	implementation 'ch.qos.logback:logback-classic:1.2.11'
}

jar.manifest {
    attributes('Implementation-Version': version)
}

eclipse {
	jdt {
		javaRuntimeName 'JavaSE-1.8'
	}
}

// to run ModbusShell, run like
// ../gradlew -q --console=plain runWithJavaExec --args='--device /dev/ttyUSB0 --baud 4800 --bits 8N1'

task runWithJavaExec(type: JavaExec) {
	group = "Execution"
	description = "Run the ModbusShell"
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'net.solarnetwork.io.modbus.shell.ModbusShell'
	standardInput = System.in
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			pom {
				name = project.description
				description = 'Nifty Modbus interactive command-line shell application.'
				url = 'https://github.com/SolarNetwork/nifty-modbus/shell'
				licenses {
					license {
						name = 'GNU General Public License, Version 2.0'
						url = 'https://opensource.org/licenses/GPL-2.0'
					}
				}
				developers {
					developer {
						id = 'msqr'
						name = 'Matt Magoffin'
						email = 'matt@solarnetwork.net'
						organization = 'SolarNetwork Foundation'
						organizationUrl = 'https://solarnetwork.org.nz'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/SolarNetwork/nifty-modbus.git'
					developerConnection = 'scm:git:git@github.com:SolarNetwork/nifty-modbus.git'
					url = 'https://github.com/SolarNetwork/nifty-modbus'
				}
			}
		}
	}
	repositories {
		maven {
			name = "OSSRH"
			url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
		}
	}
}

signing {
	useGpgCmd()
	sign publishing.publications.mavenJava
}
