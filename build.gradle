buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url = "https://plugins.gradle.org/m2/" }
	}
}

plugins {
	id "com.vanniktech.maven.publish" version "0.34.0"
}

ext {
	jscVersion = '2.11.2'
	logbackClassicVersion = '1.3.15'
	nettyVersion = '4.2.6.Final'
	pjcVersion = '1.0.2.SN20200831A'
	slf4jVersion = '1.7.36'
	ossrhUsername = 'ossrh-username'
	ossrhPassword = 'ossrh-password'
	

	libraries = [
		// Test dependencies.
		hamcrest: 'org.hamcrest:hamcrest-library:2.2'
	]
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
		maven { url = "https://plugins.gradle.org/m2/" }
    }
}

subprojects {
	group = "net.solarnetwork.common"
	version = '0.19.0.dev'
	
	base {
		archivesName = project.name
	}

	java {
		toolchain {
	        languageVersion = JavaLanguageVersion.of(8)
	    }
	}

	repositories {
		mavenCentral()
	}

	[
		compileJava,
		compileTestJava
	].each() {
		it.options.compilerArgs += [
			"-Xlint:all",
			"-Xlint:-options",
			"-Xlint:-path",
			"-Xlint:-try"
		]
		it.options.encoding = "UTF-8"
		if (rootProject.hasProperty('failOnWarnings') && rootProject.failOnWarnings.toBoolean()) {
			it.options.compilerArgs += ["-Werror"]
		}
	}

	compileTestJava {
		options.compilerArgs += [
			"-Xlint:-serial"
		]
	}

	jar.manifest {
		attributes('Implementation-Title': name,
		'Implementation-Version': version,
		'Built-By': System.getProperty('user.name'),
		'Built-JDK': System.getProperty('java.version'))
	}

	javadoc.options {
		encoding = 'UTF-8'
		use = true
		links 'https://docs.oracle.com/javase/8/docs/api/'
		source = "1.8"
	}

	dependencies {
		testImplementation libraries.hamcrest
	}

	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}

	testing {
		suites { 
			test { 
				useJUnitJupiter() 
			}
		}
	}
	
	// At a test failure, log the stack trace to the console so that we don't
	// have to open the HTML in a browser.
	test {
		testLogging {
			exceptionFormat = 'full'
			showExceptions = true
			showCauses = true
			showStackTraces = true
		}
		maxHeapSize = '1500m'
	}

	jacocoTestReport {
		reports {
			xml.required = true
		}
	}

	check.dependsOn jacocoTestReport
}

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = file("$buildDir/reports/jacoco")
}
